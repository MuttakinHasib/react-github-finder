{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context/alert/alertContext.js","components/layout/Alert.js","components/layout/Spinner.js","components/repos/RepoItem.js","components/repos/Repos.js","context/github/githubContext.js","components/users/User.js","components/users/Search.js","components/users/UserItem.js","components/users/Users.js","context/github/GithubState.js","components/pages/home.js","components/pages/About.js","components/pages/NotFound.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertStates.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","alertContext","createContext","Alert","alert","useContext","AlertContext","type","msg","Spinner","src","spinner","alt","style","width","marginTop","display","margin","RepoItem","repo","href","html_url","name","Repos","repos","map","key","id","githubContext","User","match","GithubContext","getUserRepos","getUser","loading","user","useEffect","params","login","company","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","rel","target","Search","showAlert","useState","text","setText","onSubmit","e","preventDefault","searchUsers","placeholder","value","onChange","users","length","onClick","clearUsers","UserItem","Users","userStyle","propsTypes","PropTypes","array","isRequired","bool","githubClientId","githubClientSecret","gridTemplateColumns","gridGap","home","About","NotFound","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","res","data","items","console","log","username","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2326e60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.4c140210.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className='navbar navbar-expand-md navbar-dark bg-dark'>\r\n      <div className='container'>\r\n        <Link to='/react-github-finder' className='navbar-brand'>\r\n          <i className={icon}></i>&nbsp; {title}\r\n        </Link>\r\n        <div className='collapse navbar-collapse'>\r\n          <ul className='navbar-nav ml-auto'>\r\n            <li className='nav-item'>\r\n              <Link to='/react-github-finder' className='nav-link'>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/react-github-finder/about' className='nav-link'>\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Github Finder',\r\n  icon: 'fab fa-github'\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\nexport default alertContext;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { alert } = alertContext;\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fas fa-info-circle'></i> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        alt='Loading...'\r\n        style={{\r\n          width: \"500px\",\r\n          marginTop: \"1rem\",\r\n          display: \"block\",\r\n          margin: \"auto\"\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst RepoItem = ({ repo }) => {\r\n  return (\r\n    <div className='col-md-4 my-3'>\r\n      <div className='card card-body'>\r\n        <h5>\r\n          <a href={repo.html_url}>{repo.name}</a>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nRepoItem.propTypes = {\r\n  repo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default RepoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RepoItem from './RepoItem';\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id} />);\r\n};\r\n\r\nRepos.propTypes = {\r\n  repos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Repos;\r\n","import { createContext } from 'react';\r\n\r\nconst githubContext = createContext();\r\nexport default githubContext;\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport { Link } from 'react-router-dom';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { getUserRepos, repos, getUser, loading, user } = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn border btn-light mr-2'>\r\n        <i className='fas fa-reply'></i>&nbsp;&nbsp; Back to search\r\n      </Link>\r\n      Hireable:{'  '}\r\n      {hireable ? (\r\n        <i className='fas fa-check text-success'></i>\r\n      ) : (\r\n        <i className='fas fa-times-circle text-danger'></i>\r\n      )}\r\n      <div className='card mt-3 card-body'>\r\n        <div className='row'>\r\n          <div className='col-md-5 my-3'>\r\n            <div className='text-center'>\r\n              <img\r\n                src={avatar_url}\r\n                alt=''\r\n                className='rounded-circle'\r\n                style={{ width: '150px' }}\r\n              />\r\n              <h2 className='mt-2 font-weight-bold'>{name}</h2>\r\n              <p>Location: {location}</p>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-6 my-3'>\r\n            {bio && (\r\n              <Fragment>\r\n                <h3>Bio</h3>\r\n                <p>{bio}</p>\r\n              </Fragment>\r\n            )}\r\n            <a href={html_url} className='btn btn-dark my-1'>\r\n              Visit GitHub Profile\r\n            </a>\r\n            <ul className='navbar-nav mt-2'>\r\n              {login && (\r\n                <li className='nav-item'>\r\n                  <strong>Username: &nbsp;</strong>\r\n                  {login}\r\n                </li>\r\n              )}\r\n              {company && (\r\n                <li className='nav-item'>\r\n                  <strong>Company: &nbsp;</strong>\r\n                  {company}\r\n                </li>\r\n              )}\r\n              {blog && (\r\n                <li className='nav-item'>\r\n                  <strong>Website: &nbsp;</strong>\r\n                  <a href={blog} rel='noopener noreferrer' target='_blank'>\r\n                    {blog}\r\n                  </a>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className='my-3 text-center'>\r\n          <button type='button' className='btn btn-primary m-1'>\r\n            Followers &nbsp;{' '}\r\n            <span className='badge badge-light'>{followers}</span>\r\n          </button>\r\n          <button type='button' className='btn m-1 btn-success'>\r\n            Following &nbsp;{' '}\r\n            <span className='badge badge-light'>{following}</span>\r\n          </button>\r\n          <button type='button' className='btn m-1 btn-light border text-dark'>\r\n            Public Repos &nbsp;{' '}\r\n            <span className='badge badge-dark'>{public_repos}</span>\r\n          </button>\r\n          <button type='button' className='btn m-1 btn-dark'>\r\n            Public Gists &nbsp;{' '}\r\n            <span className='badge badge-light'>{public_gists}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='row mt-2'>\r\n        <Repos repos={repos} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useContext } from 'react';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { showAlert } = alertContext;\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      showAlert('Please enter something', 'danger');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const onChange = e => setText(e.target.value);\r\n\r\n  return (\r\n    <div className='row align-items-center mb-3'>\r\n      <div className='col-10 my-3'>\r\n        <form onSubmit={onSubmit} className='form'>\r\n          <div className='form-row'>\r\n            <div className='col my-3'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Search Here...'\r\n                value={text}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div className='col-sm-2 my-3'>\r\n              <input\r\n                type='submit'\r\n                value='Search'\r\n                className='btn btn-secondary'\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {githubContext.users.length > 0 && (\r\n        <div className='col-sm'>\r\n          <button className='btn btn-danger' onClick={githubContext.clearUsers}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n  return (\r\n    <div className='card card-body text-center'>\r\n      <img\r\n        src={avatar_url}\r\n        alt=''\r\n        style={{ width: '100px' }}\r\n        className='rounded d-block m-auto'\r\n      />\r\n      <h3 className='py-2'>{login}</h3>\r\n      <div>\r\n        <Link to={`/user/${login}`} className='btn btn-dark btn-small'>\r\n          More\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useContext } from 'react';\r\nimport UserItem from './UserItem';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { users, loading } = githubContext;\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map(user => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nUsers.propsTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridGap: '1rem'\r\n};\r\nexport default Users;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS\r\n} from '../types';\r\nlet githubClientId;\r\nlet githubClientSecret;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\nconst GithubState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n  const searchUsers = async text => {\r\n    setLoading();\r\n    try {\r\n      const res = await axios.get(\r\n        `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&${githubClientSecret}`\r\n      );\r\n\r\n      dispatch({\r\n        type: SEARCH_USERS,\r\n        payload: res.data.items\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getUser = async username => {\r\n    setLoading();\r\n    try {\r\n      const res = await axios.get(\r\n        `https://api.github.com/users/${username}?client_id=${githubClientId}&${githubClientSecret}`\r\n      );\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getUserRepos = async username => {\r\n    setLoading();\r\n    try {\r\n      const res = await axios.get(\r\n        `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&${githubClientSecret}`\r\n      );\r\n      dispatch({\r\n        type: GET_REPOS,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import React, { Fragment } from 'react';\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst home = () => {\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n      <Users />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default home;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>About this App</h1>\r\n      <p>App to search Github Users</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-1 text-center\">Page Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = null;\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  const showAlert = (msg, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: {\r\n        msg,\r\n        type\r\n      }\r\n    });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        showAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport User from './components/users/User';\nimport Home from './components/pages/home';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertStates';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className='App'>\n            <Navbar />\n            <div className='container mt-3'>\n              <Alert alert={alert} />\n              <Switch>\n                <Route exact path='/react-github-finder' component={Home} />\n                <Route exact path='/react-github-finder/about' component={About} />\n                <Route exact path='/react-github-finder/user/:login' component={User} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}